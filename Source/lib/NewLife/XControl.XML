<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XControl</name>
    </assembly>
    <members>
        <member name="T:XControl.BoxControl">
            <summary>弹出窗口</summary>
        </member>
        <member name="M:XControl.BoxControl.OnPreRender(System.EventArgs)">
            <summary>已重载。</summary>
            <param name="e"></param>
        </member>
        <member name="M:XControl.BoxControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>已重载。</summary>
            <param name="writer"></param>
        </member>
        <member name="T:XControl.LinkBox">
            <summary>弹出窗口</summary>
        </member>
        <member name="M:XControl.LinkBox.OnPreRender(System.EventArgs)">
            <summary>已重载。</summary>
            <param name="e"></param>
        </member>
        <member name="M:XControl.LinkBox.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>已重载。</summary>
            <param name="writer"></param>
        </member>
        <member name="M:XControl.LinkBox.RegisterReloadFormJs(System.Web.UI.ClientScriptManager,System.Boolean)">
            <summary>返回默认的reloadForm实现,配合Box.js中的Dialog.CloseAndRefresh</summary>
            <returns></returns>
        </member>
        <member name="P:XControl.LinkBox.Title">
            <summary>标题</summary>
        </member>
        <member name="P:XControl.LinkBox.Url">
            <summary>字符串</summary>
        </member>
        <member name="P:XControl.LinkBox.BoxWidth">
            <summary>宽度</summary>
        </member>
        <member name="P:XControl.LinkBox.BoxHeight">
            <summary>高度</summary>
        </member>
        <member name="P:XControl.LinkBox.ShowMessageRow">
            <summary>是否显示信息行</summary>
        </member>
        <member name="P:XControl.LinkBox.MessageTitle">
            <summary>消息标题</summary>
        </member>
        <member name="P:XControl.LinkBox.Message">
            <summary>消息</summary>
        </member>
        <member name="P:XControl.LinkBox.ShowButtonRow">
            <summary>是否显示按钮行</summary>
        </member>
        <member name="P:XControl.LinkBox.IconLeft">
            <summary>左侧图标</summary>
        </member>
        <member name="P:XControl.LinkBox.IconRight">
            <summary>右侧图标</summary>
        </member>
        <member name="P:XControl.LinkBox.BeforeShow">
            <summary>显示前参数添加</summary>
        </member>
        <member name="P:XControl.LinkBox.InWindow">
            <summary>
            需要弹出在哪个窗口中
            </summary>
            <remarks>
            js代码,默认为尽可能上级窗口中有Box.js的窗口,可指定的值比如window,parent,也可以是调用js函数
            </remarks>
        </member>
        <member name="P:XControl.LinkBox.ParentWindow">
            <summary>
            逻辑父窗口,如果调用关闭并刷新,将会刷新这个属性指定的窗口,默认为放置当前LinkBox所在的窗口
            </summary>
        </member>
        <member name="T:XControl.LinkBoxField">
            <summary>链接弹出框字段</summary>
        </member>
        <member name="T:XControl.LinkButtonField">
            <summary>连接按钮字段</summary>
        </member>
        <member name="M:XControl.LinkButtonField.CreateField">
            <summary>建立字段</summary>
            <returns></returns>
        </member>
        <member name="M:XControl.LinkButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)">
            <summary>已重载。</summary>
            <param name="newField"></param>
        </member>
        <member name="M:XControl.LinkButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)">
            <summary>初始化单元格</summary>
            <param name="cell"></param>
            <param name="cellType"></param>
            <param name="rowState"></param>
            <param name="rowIndex"></param>
        </member>
        <member name="M:XControl.LinkButtonField.OnDataBindField(System.Web.UI.WebControls.HyperLink)">
            <summary>HyperLink数据绑定时触发</summary>
            <param name="link"></param>
        </member>
        <member name="M:XControl.LinkButtonField.InitializeControl(System.Web.UI.WebControls.HyperLink)">
            <summary>初始化链接控件</summary>
            <param name="link"></param>
        </member>
        <member name="M:XControl.LinkButtonField.OnPreRender(System.Web.UI.WebControls.HyperLink)">
            <summary>呈现控件时</summary>
            <param name="link"></param>
        </member>
        <member name="P:XControl.LinkButtonField.OnClientClick">
            <summary>客户端点击事件</summary>
        </member>
        <member name="M:XControl.LinkBoxField.CreateField">
            <summary>创建字段</summary>
            <returns></returns>
        </member>
        <member name="M:XControl.LinkBoxField.CopyProperties(System.Web.UI.WebControls.DataControlField)">
            <summary>已重载。</summary>
            <param name="newField"></param>
        </member>
        <member name="M:XControl.LinkBoxField.OnDataBindField(System.Web.UI.WebControls.HyperLink)">
            <summary>HyperLink数据绑定时触发</summary>
            <param name="link"></param>
        </member>
        <member name="M:XControl.LinkBoxField.OnPreRender(System.Web.UI.WebControls.HyperLink)">
            <summary>已重载。</summary>
            <param name="link"></param>
        </member>
        <member name="P:XControl.LinkBoxField.Title">
            <summary>标题</summary>
        </member>
        <member name="P:XControl.LinkBoxField.DataTitleField">
            <summary>数据标题字段</summary>
        </member>
        <member name="P:XControl.LinkBoxField.DataTitleFormatString">
            <summary>数据标题格式化字符串</summary>
        </member>
        <member name="P:XControl.LinkBoxField.Url">
            <summary>字符串</summary>
        </member>
        <member name="P:XControl.LinkBoxField.Width">
            <summary>宽度</summary>
        </member>
        <member name="P:XControl.LinkBoxField.Height">
            <summary>高度</summary>
        </member>
        <member name="P:XControl.LinkBoxField.ShowMessageRow">
            <summary>是否显示信息行</summary>
        </member>
        <member name="P:XControl.LinkBoxField.MessageTitle">
            <summary>消息标题</summary>
        </member>
        <member name="P:XControl.LinkBoxField.Message">
            <summary>消息</summary>
        </member>
        <member name="P:XControl.LinkBoxField.ShowButtonRow">
            <summary>是否显示按钮行</summary>
        </member>
        <member name="P:XControl.LinkBoxField.InWindow">
            <summary>
            需要弹出在哪个窗口中
            </summary>
            <remarks>
            js代码,默认为尽可能上级窗口中有Box.js的窗口,可指定的值比如window,parent,也可以是调用js函数
            </remarks>
        </member>
        <member name="P:XControl.LinkBoxField.ParentWindow">
            <summary>
            逻辑父窗口,如果调用关闭并刷新,将会刷新这个属性指定的窗口,默认为放置当前LinkBox所在的窗口
            </summary>
        </member>
        <member name="P:XControl.LinkBoxField.ClickedRowBackColor">
            <summary>打开窗口后将所在GridView中所在行高亮的颜色</summary>
        </member>
        <member name="T:XControl.MenuParameterItem">
            <summary>菜单项</summary>
        </member>
        <member name="T:XControl.IViewState">
            <summary>
            可访问到ViewState属性的接口
            </summary>
        </member>
        <member name="P:XControl.IViewState.ViewState">
            <summary>
            视图状态属性
            </summary>
        </member>
        <member name="M:XControl.MenuParameterItem.#ctor(XControl.MenuParameterItem)">
            <summary>构造方法</summary>
            <param name="original"></param>
        </member>
        <member name="M:XControl.MenuParameterItem.#ctor">
            <summary>构造方法</summary>
        </member>
        <member name="M:XControl.MenuParameterItem.#ctor(System.String,System.String,System.String,System.String)">
            <summary>构造方法</summary>
            <param name="text"></param>
            <param name="url"></param>
            <param name="onclick"></param>
            <param name="icon"></param>
        </member>
        <member name="M:XControl.MenuParameterItem.LoadViewState(System.Object)">
            <summary>
            实现IStateManager接口
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:XControl.MenuParameterItem.SaveViewState">
            <summary>
            实现IStateManager接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:XControl.MenuParameterItem.TrackViewState">
            <summary>
            实现IStateManager接口
            </summary>
        </member>
        <member name="P:XControl.MenuParameterItem.Text">
            <summary>菜单项文本</summary>
        </member>
        <member name="P:XControl.MenuParameterItem.Url">
            <summary>菜单项连接</summary>
        </member>
        <member name="P:XControl.MenuParameterItem.OnClick">
            <summary>菜单项事件</summary>
        </member>
        <member name="P:XControl.MenuParameterItem.IConCss">
            <summary>菜单项ICon样式</summary>
        </member>
        <member name="P:XControl.MenuParameterItem.IsTrackingViewState">
            <summary>
            实现IStateManager接口
            </summary>
        </member>
        <member name="T:XControl.TreeMenuRoot">
            <summary>树菜单根</summary>
        </member>
        <member name="F:XControl.TreeMenuRoot.xslFilePath">
            <summary>默认Xsl</summary>
        </member>
        <member name="F:XControl.TreeMenuRoot.jsFilePath">
            <summary>菜单js资源路径</summary>
        </member>
        <member name="F:XControl.TreeMenuRoot.ImagePath">
            <summary>关闭</summary>
        </member>
        <member name="F:XControl.TreeMenuRoot.ImageOpenPath">
            <summary>打开</summary>
        </member>
        <member name="F:XControl.TreeMenuRoot.ImagePagePath">
            <summary>无子级</summary>
        </member>
        <member name="M:XControl.TreeMenuRoot.Page">
            <summary>用于获取资源URL</summary>
            <returns></returns>
        </member>
        <member name="M:XControl.TreeMenuRoot.GetTreeMenu``1(``0,NewLife.Reflection.Func{``0,System.Collections.Generic.List{``0}},NewLife.Reflection.Func{``0,XControl.TreeMenuNode})">
            <summary>获取菜单树</summary>
            <typeparam name="T"></typeparam>
            <param name="rootNode"></param>
            <param name="getChildsfun"></param>
            <param name="convertToTreeMenu"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.TreeMenuRoot.GetTreeMenuRoot``1(``0,NewLife.Reflection.Func{``0,System.Collections.Generic.List{``0}},NewLife.Reflection.Func{``0,XControl.TreeMenuNode})">
            <summary>通过根节点获取</summary>
            <typeparam name="T"></typeparam>
            <param name="rootNode"></param>
            <param name="getChildsfun"></param>
            <param name="convertToTreeMenu"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.TreeMenuRoot.GetTreeMenuRoot``1(System.Collections.Generic.List{``0},NewLife.Reflection.Func{``0,System.Collections.Generic.List{``0}},NewLife.Reflection.Func{``0,XControl.TreeMenuNode})">
            <summary>通过节点列表</summary>
            <typeparam name="T"></typeparam>
            <param name="nodeList"></param>
            <param name="getChildsfun"></param>
            <param name="convertToTreeMenu"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.TreeMenuRoot.Serialize">
            <summary>序列化</summary>
            <returns></returns>
        </member>
        <member name="M:XControl.TreeMenuRoot.Serialize(System.String)">
            <summary>序列化</summary>
            <param name="xsl">xsl文件</param>
            <returns></returns>
        </member>
        <member name="M:XControl.TreeMenuRoot.ToHtml(System.Boolean)">
            <summary>
            转换为Html
            使用默认xsl
            </summary>
            <param name="isAddTreeJS"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.TreeMenuRoot.ToHtml(System.String,System.Boolean)">
            <summary>转换为Html</summary>
            <param name="xsl"></param>
            <param name="isAddTreeJS"></param>
            <returns></returns>
        </member>
        <member name="P:XControl.TreeMenuRoot.Nodes">
            <summary>节点</summary>
        </member>
        <member name="T:XControl.TreeMenuNode">
            <summary>Xml树状菜单节点</summary>
        </member>
        <member name="M:XControl.TreeMenuNode.ResetImage">
            <summary>设置默认图片</summary>
            <returns></returns>
        </member>
        <member name="M:XControl.TreeMenuNode.ResetTreeNode(XControl.TreeMenuNode)">
            <summary>设置默认数据</summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="P:XControl.TreeMenuNode.ID">
            <summary>菜单项ID</summary>
        </member>
        <member name="P:XControl.TreeMenuNode.Title">
            <summary>菜单名</summary>
        </member>
        <member name="P:XControl.TreeMenuNode.DirImage">
            <summary>前缀图标 关闭状态</summary>
        </member>
        <member name="P:XControl.TreeMenuNode.DirImageOpen">
            <summary>前缀图片 打开状态</summary>
        </member>
        <member name="P:XControl.TreeMenuNode.PagerImage">
            <summary>单页图片</summary>
        </member>
        <member name="P:XControl.TreeMenuNode.Url">
            <summary>菜单连接</summary>
        </member>
        <member name="P:XControl.TreeMenuNode.Childs">
            <summary>子级</summary>
        </member>
        <member name="P:XControl.XControlConfig.Debug">
            <summary>控件的Debug开关,配置项的名称是XControl.Debug</summary>
        </member>
        <member name="T:XControl.MenuTemplateItem">
            <summary>菜单模版项</summary>
        </member>
        <member name="M:XControl.MenuTemplateItem.LoadViewState(System.Object)">
            <summary>
            实现IStateManager接口
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:XControl.MenuTemplateItem.SaveViewState">
            <summary>
            实现IStateManager接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:XControl.MenuTemplateItem.TrackViewState">
            <summary>
            实现IStateManager接口
            </summary>
        </member>
        <member name="P:XControl.MenuTemplateItem.ConditionFieldValue">
            <summary>条件值</summary>
        </member>
        <member name="P:XControl.MenuTemplateItem.Template">
            <summary>属性说明</summary>
        </member>
        <member name="P:XControl.MenuTemplateItem.IsTrackingViewState">
            <summary>
            实现IStateManager接口
            </summary>
        </member>
        <member name="T:XControl.MenuField">
            <summary>MenuField 的摘要说明</summary>
        </member>
        <member name="M:XControl.MenuField.#ctor">
            <summary>构造方法</summary>
        </member>
        <member name="M:XControl.MenuField.CreateField">
            <summary>重写</summary>
            <returns></returns>
        </member>
        <member name="M:XControl.MenuField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)">
            <summary>初始化单元格</summary>
            <param name="cell"></param>
            <param name="cellType"></param>
            <param name="rowState"></param>
            <param name="rowIndex"></param>
        </member>
        <member name="M:XControl.MenuField.CellDataBinding(System.Object,System.EventArgs)">
            <summary>单无格数据绑定事件</summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:XControl.MenuField.CreateMenu(System.Web.UI.WebControls.DataControlFieldCell)">
            <summary>生成菜单</summary>
            <param name="cell"></param>
        </member>
        <member name="M:XControl.MenuField.CreateJSBlack(System.Web.UI.Control)">
            <summary>生成菜单 JS</summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.MenuField.CreateMenuDivID(System.String)">
            <summary>生成菜单DIVID</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.MenuField.CreateMenuButton">
            <summary>菜单按钮</summary>
        </member>
        <member name="M:XControl.MenuField.MenuButtonPreRender(System.Object,System.EventArgs)">
            <summary>菜单按钮呈显</summary>
            <param name="sender"></param>
            <param name="arg"></param>
        </member>
        <member name="M:XControl.MenuField.CopyProperties(System.Web.UI.WebControls.DataControlField)">
            <summary>已重载。</summary>
            <param name="newField"></param>
        </member>
        <member name="M:XControl.MenuField.GetDataFileValue(System.Object,System.String)">
            <summary>获取字段值</summary>
            <param name="component"></param>
            <param name="field">字段</param>
            <returns></returns>
        </member>
        <member name="P:XControl.MenuField.MenuCss">
            <summary>菜单层样式</summary>
        </member>
        <member name="P:XControl.MenuField.ControlCss">
            <summary>重写CssClass</summary>
        </member>
        <member name="P:XControl.MenuField.MenuParameters">
            <summary>重写CssClass</summary>
        </member>
        <member name="P:XControl.MenuField.Text">
            <summary>项显示内容</summary>
        </member>
        <member name="P:XControl.MenuField.TriggerEvent">
            <summary>菜单响应事件</summary>
        </member>
        <member name="P:XControl.MenuField.DataField">
            <summary>绑定字段</summary>
        </member>
        <member name="P:XControl.MenuField.ConditionField">
            <summary>
            条件字段
            用于模版控制
            </summary>
        </member>
        <member name="P:XControl.MenuField.MenuTemplate">
            <summary>条件模版</summary>
        </member>
        <member name="T:XControl.ViewStateCollection`1">
            <summary>
            视图状态集合,用于作为服务端控件集合属性的类型,T是集合元素类型
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:XControl.ViewStateCollection`1.CreateKnownType(System.Int32)">
            <summary>
            重写自StateManagedCollection类
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.ViewStateCollection`1.GetKnownTypes">
            <summary>
            重写自StateManagedCollection类
            </summary>
            <returns></returns>
        </member>
        <member name="M:XControl.ViewStateCollection`1.SetDirtyObject(System.Object)">
            <summary>
            实现StateManagedCollection类
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:XControl.ViewStateCollection`1.Add(`0)">
            <summary>
            实现IList接口
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:XControl.ViewStateCollection`1.AddAt(System.Int32,`0)">
            <summary>
            实现IList接口
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:XControl.ViewStateCollection`1.Clear">
            <summary>
            实现IList接口
            </summary>
        </member>
        <member name="M:XControl.ViewStateCollection`1.Contains(`0)">
            <summary>
            实现IList接口
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.ViewStateCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            实现IList接口
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:XControl.ViewStateCollection`1.CopyTo(System.Array,System.Int32)">
            <summary>
            实现IList接口
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:XControl.ViewStateCollection`1.GetEnumerator">
            <summary>
            实现IList接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:XControl.ViewStateCollection`1.IndexOf(`0)">
            <summary>
            实现IList接口
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.ViewStateCollection`1.Remove(`0)">
            <summary>
            实现IList接口
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:XControl.ViewStateCollection`1.RemoveAt(System.Int32)">
            <summary>
            实现IList接口
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:XControl.ViewStateCollection`1.Item(System.Int32)">
            <summary>
            实现IList接口
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:XControl.ScriptHelper">
            <summary>脚本助手</summary>
        </member>
        <member name="M:XControl.ScriptHelper.RegisterScript(System.String)">
            <summary>向当前页面注册客户端脚本</summary>
            <param name="script"></param>
        </member>
        <member name="M:XControl.ScriptHelper.RegisterScript(System.String,System.String)">
            <summary>向当前页面注册客户端脚本</summary>
            <param name="key"></param>
            <param name="script"></param>
        </member>
        <member name="M:XControl.ScriptHelper.RegisterHiddenField(System.String,System.String)">
            <summary>
            向页面注册HiddenField控件
            add by Vincent.Q 11.01.27
            </summary>
            <param name="as_hfieldid"></param>
            <param name="as_value"></param>
        </member>
        <member name="M:XControl.ScriptHelper.RegisterInclude(System.String,System.String,System.Int32,System.Boolean)">
            <summary>使用键和 URL 向 System.Web.UI.Page 对象注册客户端脚本。</summary>
            <param name="key"></param>
            <param name="url"></param>
            <param name="ieVer"></param>
            <param name="defer"></param>
        </member>
        <member name="M:XControl.ScriptHelper.Compressed(System.String)">
            <summary>去除换行和多余空白字符</summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="P:XControl.ScriptHelper.page">
            <summary>当前页面</summary>        
        </member>
        <member name="T:XControl.DateTimelhg">
            <summary>日期时间选择器</summary>
        </member>
        <member name="M:XControl.DateTimelhg.OnInit(System.EventArgs)">
            <summary></summary>
            <param name="e"></param>
        </member>
        <member name="M:XControl.DateTimelhg.OnLoad(System.EventArgs)">
            <summary></summary>
            <param name="e"></param>
        </member>
        <member name="P:XControl.DateTimelhg.LongTime">
            <summary>是否长时间格式</summary>
        </member>
        <member name="P:XControl.DateTimelhg.ClientReadOnly">
            <summary>客户端只读</summary>
        </member>
        <member name="P:XControl.DateTimelhg.btnBar">
            <summary>客户端只读</summary>
        </member>
        <member name="P:XControl.DateTimelhg.disWeek">
            <summary>客户端只读</summary>
        </member>
        <member name="P:XControl.DateTimelhg.linkageObj">
            <summary>联动日历选择</summary>
        </member>
        <member name="P:XControl.DateTimelhg.linkage">
            <summary>联动日历选择</summary>
        </member>
        <member name="P:XControl.DateTimelhg.maxDateID">
            <summary>联动日历选择</summary>
        </member>
        <member name="P:XControl.DateTimelhg.minDateID">
            <summary>联动日历选择</summary>
        </member>
        <member name="P:XControl.DateTimelhg.disDate">
            <summary>联动日历选择</summary>
        </member>
        <member name="P:XControl.DateTimelhg.Value">
            <summary></summary>
        </member>
        <member name="P:XControl.DateTimelhg.minDate">
            <summary></summary>
        </member>
        <member name="P:XControl.DateTimelhg.maxDate">
            <summary></summary>
        </member>
        <member name="T:XControl.DecimalBox">
            <summary>价格输入控件，只能输入数字，通常只作为输入价格时候使用</summary>
        </member>
        <member name="M:XControl.DecimalBox.#ctor">
            <summary>初始化价格输入控件的样式</summary>
        </member>
        <member name="M:XControl.DecimalBox.OnPreRender(System.EventArgs)">
            <summary>已重载</summary>
            <param name="e"></param>
        </member>
        <member name="P:XControl.DecimalBox.CurrencyDecimalDigits">
            <summary>小数点右边位数</summary>
        </member>
        <member name="P:XControl.DecimalBox.CurrencyGroupSizes">
            <summary>小数点左边部分每组数字位数</summary>
        </member>
        <member name="P:XControl.DecimalBox.CurrencyGroupSeparator">
            <summary>小数点左边部分每组数字分组符</summary>
        </member>
        <member name="P:XControl.DecimalBox.IsAddSymbol">
            <summary>是否添加货币符号</summary>
        </member>
        <member name="P:XControl.DecimalBox.CurrencySymbol">
            <summary>获取或设置用作货币符号的字符串</summary>
        </member>
        <member name="P:XControl.DecimalBox.Value">
            <summary>当前值</summary>
        </member>
        <member name="P:XControl.DecimalBox.AllowMinus">
            <summary>是否允许负数</summary>
        </member>
        <member name="P:XControl.DecimalBox.Text">
            <summary>重新包装Text属性，数据转换以及格式化部分在Text内完成</summary>
        </member>
        <member name="T:XControl.GridViewExtenderDesigner">
            <summary>GridView扩展控件设计时</summary>
        </member>
        <member name="T:XControl.ExtenderControlDesigner`2">
            <summary>扩展控件设计时</summary>
            <typeparam name="TControl">扩展控件</typeparam>
            <typeparam name="TTargetControl">目标控件</typeparam>
        </member>
        <member name="T:XControl.ExtenderControlDesigner">
            <summary>扩展控件设计时</summary>
        </member>
        <member name="M:XControl.ExtenderControlDesigner.GetDesignTimeHtml">
            <summary>已重载。</summary>
            <returns></returns>
        </member>
        <member name="M:XControl.ExtenderControlDesigner.UpdateTargetDesignTimeHtml(System.Web.UI.Control)">
            <summary>更新目标设计时</summary>
            <param name="component"></param>
        </member>
        <member name="M:XControl.ExtenderControlDesigner`2.UpdateDesignTimeHtml">
            <summary>已重载。</summary>
            <returns></returns>
        </member>
        <member name="P:XControl.ExtenderControlDesigner`2.TargetControl">
            <summary>目标控件</summary>
        </member>
        <member name="M:XControl.GridViewExtenderDesigner.SetPagerTemplate">
            <summary>设置分页模版</summary>
        </member>
        <member name="P:XControl.GridViewExtenderDesigner.ActionLists">
            <summary>已重载。</summary>
        </member>
        <member name="M:XControl.GridViewExtenderDesigner.GridViewExtenderActionList.GetSortedActionItems">
            <summary>已重载。</summary>
            <returns></returns>
        </member>
        <member name="P:XControl.GridViewExtenderDesigner.GridViewExtenderActionList.AutoShow">
            <summary>是否自动显示</summary>
        </member>
        <member name="T:XControl.ExtenderControl`1">
            <summary>泛型扩展控件基类，泛型指定目标控件类型</summary>
            <typeparam name="TTargetControl"></typeparam>
        </member>
        <member name="M:XControl.ExtenderControl`1.FindControl(System.String)">
            <summary>根据ID查找控件</summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.ExtenderControl`1.FindTargetControl">
            <summary>查找目标控件</summary>
            <returns></returns>
        </member>
        <member name="M:XControl.ExtenderControl`1.GetPropertyValue``1(System.String,``0)">
            <summary>获取属性值</summary>
            <typeparam name="V"></typeparam>
            <param name="propertyName"></param>
            <param name="nullValue"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.ExtenderControl`1.SetPropertyValue``1(System.String,``0)">
            <summary>设置属性值</summary>
            <typeparam name="V"></typeparam>
            <param name="propertyName"></param>
            <param name="value">数值</param>
        </member>
        <member name="M:XControl.ExtenderControl`1.UpdateTargetDesignTimeHtml">
            <summary>更新目标设计时</summary>
        </member>
        <member name="P:XControl.ExtenderControl`1.TargetControlID">
            <summary>目标控件ID</summary>
        </member>
        <member name="P:XControl.ExtenderControl`1.Enabled">
            <summary>是否启用</summary>
        </member>
        <member name="P:XControl.ExtenderControl`1.AutoAttach">
            <summary>是否自动附属该类型的目标控件</summary>
        </member>
        <member name="P:XControl.ExtenderControl`1.TargetControl">
            <summary>目标控件</summary>
        </member>
        <member name="P:XControl.ExtenderControl`1.Visible">
            <summary>已重载。用于隐藏Visible属性</summary>
        </member>
        <member name="M:XControl.Helper.FindControlUp``1(System.Web.UI.Control,System.String)">
            <summary>逐层向上找控件</summary>
            <typeparam name="TControl"></typeparam>
            <param name="control"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.Helper.FindControl``1(System.Web.UI.Control,System.String)">
            <summary>逐层向下找控件</summary>
            <typeparam name="TControl"></typeparam>
            <param name="control"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.Helper.HTMLPropertyEscape(System.String)">
            <summary>将指定字符串作为html标签属性中可使用的字符串返回</summary>
            <param name="s"></param>
        </member>
        <member name="M:XControl.Helper.HTMLPropertyEscape(System.String,System.Object[])">
            <summary>将指定字符串作为html标签属性中可使用的字符串返回</summary>
            <param name="fmt"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.Helper.HTMLPropertyEscape(System.Web.UI.WebControls.WebControl,System.String,System.String,System.Object[])">
            <summary>将指定字符串作为html标签属性中可使用的字符串返回</summary>
            <param name="ctl">需要添加属性的控件</param>
            <param name="attname">需要添加的html属性名,以on开头的名称将会使用JsMinSimple处理换行</param>
            <param name="fmt"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.Helper.JsObjectString(System.Object[])">
            <summary>使用指定的名值对创建对应的Javascript Object的声明字符串</summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.Helper.JsObjectString(NewLife.Reflection.Func{System.String,System.Object,System.Boolean},System.Object[])">
             <summary>
             使用指定的名值对创建对应的Javascript Object的声明字符串
             返回的结果类似 {'a':0.1, 'b':'2', 'c':true},如果args长度为0则返回{}
            
             如果不是成对出现的 则会忽略掉最后一个
             如果需要去除开始和结尾的{},可以使用String.Trim('{','}')
             </summary>
             <param name="filter">过滤器,遍历名值,只对于返回true的名值进行处理</param>
             <param name="args"></param>
             <returns></returns>
        </member>
        <member name="M:XControl.Helper.JsObjectString(System.Boolean,NewLife.Reflection.Func{System.String,System.Object,System.Boolean},System.Object[])">
            <summary>使用指定的名值对创建对应的Javascript Object的声明字符串</summary>
            <param name="escapeValue"></param>
            <param name="filter"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.Helper.IsJsLiteralValue(System.Object)">
            <summary>指定变量是否属于js的字面值类型,字面值类型可以直接ToString输出</summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.Helper.JsStringEscape(System.String)">
            <summary>将指定的字符串作为javascript中使用的字符串内容返回,没有js字符串声明两边的双引号</summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.Helper.JsStringEscape(System.String,System.Object[])">
            <summary>将指定的字符串作为javascript中使用的字符串内容返回,没有js字符串声明两边的双引号</summary>
            <param name="fmt"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.Helper.JsMinSimple(System.String)">
            <summary>将指定的javascript代码做简单压缩,去除换行和缩进</summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.Helper.JsMinSimple(System.Boolean,System.String)">
            <summary>将指定的javascript代码做简单压缩,去除换行和缩进</summary>
            <param name="toggle"></param>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.Helper.JsMinSimple(System.String,System.Object[])">
            <summary>将指定的javascript代码做简单压缩,去除换行和缩进</summary>
            <param name="fmt"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.Helper.JsMinSimple(System.Boolean,System.String,System.Object[])">
            <summary>将指定的javascript代码做简单压缩,去除换行和缩进</summary>
            <param name="toggle">开关,为true时才会压缩</param>
            <param name="fmt"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:XControl.ChooseButton">
            <summary>选择输入控件</summary>
        </member>
        <member name="M:XControl.ChooseButton.CreateChildControls">
            <summary>创建一个隐藏子控件</summary>
        </member>
        <member name="M:XControl.ChooseButton.OnPreRender(System.EventArgs)">
            <summary>预呈现。输出脚本</summary>
            <param name="e"></param>
        </member>
        <member name="M:XControl.ChooseButton.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>已重写。忽略外部标签</summary>
            <param name="writer"></param>
        </member>
        <member name="M:XControl.ChooseButton.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>已重写。忽略外部标签</summary>
            <param name="writer"></param>
        </member>
        <member name="P:XControl.ChooseButton.Text">
            <summary>文本</summary>
        </member>
        <member name="P:XControl.ChooseButton.Value">
            <summary>值</summary>
        </member>
        <member name="P:XControl.ChooseButton.Url">
            <summary>选择页地址</summary>
        </member>
        <member name="P:XControl.ChooseButton.ProcessedUrl">
            <summary>返回处理过~/的url地址</summary>
        </member>
        <member name="P:XControl.ChooseButton.ControlID">
            <summary>控件ID</summary>
        </member>
        <member name="P:XControl.ChooseButton.AutoPostBack">
            <summary>自动回发</summary>
        </member>
        <member name="P:XControl.ChooseButton.ModalDialogOptions">
            <summary>弹出的模式窗口选项</summary>
        </member>
        <member name="P:XControl.ChooseButton.ExtraClientOptions">
            <summary>扩展的客户端选项</summary>
        </member>
        <member name="P:XControl.ChooseButton.ClientID">
            <summary><see cref="P:System.Web.UI.Control.ClientID"/></summary>
        </member>
        <member name="P:XControl.ChooseButton.BtnControl">
            <summary>按钮</summary>
        </member>
        <member name="P:XControl.ChooseButton.HiddenControl">
            <summary>隐藏域</summary>
        </member>
        <member name="P:XControl.ChooseButton.HiddenControlText">
            <summary>隐藏域</summary>
        </member>
        <member name="E:XControl.ChooseButton.ValueChanged">
            <summary>值改变时触发</summary>
        </member>
        <member name="T:XControl.VerifyCodeBox">
             <summary>验证码图片控件</summary>
             <remarks>
             典型的使用方法,在web.config中配置一个httpHandler
             <code>
                 configuration
                     system.web
                         httpHandlers
                             &lt;add verb="GET" path="VerifyCodeImage.aspx" type="XControl.VerifyCodeImageHttpHandler, XControl"/&gt;
             </code>
            
             如果上述配置的path没有使用默认值,则需要配置这个路径
             <code>
                 configuration
                     appSettings
                         &lt;add key="XControl.VerifyCode.DefaultImageHandler" value="~/VerifyCodeImage.aspx"/&gt;
             </code>
            
             在页面上使用方法如下
             <code>
                 &lt;asp:TextBox runat="server" ID="TextBox1" Text=""&gt;&lt;/asp:TextBox&gt;
                 &lt;XCL:VerifyCodeBox runat="server" ID="VerifyCodeBox1" ControlToValidate="TextBox1"&gt;&lt;/XCL:VerifyCodeBox&gt;
                 &lt;asp:Button runat="server" ID="Button1" Text="提交"/&gt;
             </code>
            
             输出到前端的标签结构如下,注意label的id和内部span的id变化
             <code>
                 &lt;label id="ClientIDContainer"&gt;&lt;img src="verifyCode.aspx"/&gt;&lt;span id="ClientID"&gt;ErrorMessage&lt;/span&gt;&lt;/label&gt;
             </code>
             </remarks>
        </member>
        <member name="M:XControl.VerifyCodeBox.#ctor">
            <summary>验证码图片控件构造方法</summary>
        </member>
        <member name="M:XControl.VerifyCodeBox.OnLoad(System.EventArgs)">
            <summary>
            初始化
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:XControl.VerifyCodeBox.EvaluateIsValid">
            <summary>验证</summary>
            <returns></returns>
        </member>
        <member name="M:XControl.VerifyCodeBox.OnInit(System.EventArgs)">
            <summary>已重载</summary>
            <param name="e"></param>
        </member>
        <member name="M:XControl.VerifyCodeBox.SaveControlState">
            <summary>已重载,保存控件状态</summary>
            <returns></returns>
        </member>
        <member name="M:XControl.VerifyCodeBox.LoadControlState(System.Object)">
            <summary>已重载,保存控件状态</summary>
            <param name="savedState"></param>
        </member>
        <member name="M:XControl.VerifyCodeBox.CreateChildControls">
            <summary>
            已重载
            </summary>
        </member>
        <member name="M:XControl.VerifyCodeBox.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            已重载
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:XControl.VerifyCodeBox.DefaultImageHandler">
            <summary>
            获取验证码图片当前配置的默认路径
            </summary>
        </member>
        <member name="P:XControl.VerifyCodeBox.VerifyGUID">
            <summary>内部使用的,用于标识一个表单请求,以便在表单提交时获得当前表单的验证码</summary>
        </member>
        <member name="P:XControl.VerifyCodeBox.TagKey">
            <summary>已重载</summary>
        </member>
        <member name="P:XControl.VerifyCodeBox.ImageHandlerUrl">
            <summary>
            效验码图片地址,建议在web.config中设置XControl.VerifyCode.DefaultImageHandler,除非需要特别设置
            </summary>
        </member>
        <member name="P:XControl.VerifyCodeBox.ContainerTagName">
            <summary>
            验证码的容器标签名,默认为span
            </summary>
        </member>
        <member name="T:XControl.VerifyCodeBox.ControlState">
            <summary>
            控件状态类
            </summary>
        </member>
        <member name="T:XControl.VerifyCodeImageHttpHandler">
            <summary>
            用于产生效验码图片自身,需要在web.config中配置为一个httpHandler,参考VerifyCodeBox类的备注
            </summary>
        </member>
        <member name="M:XControl.VerifyCodeImageHttpHandler.#ctor">
            <summary>构造方法</summary>
        </member>
        <member name="M:XControl.VerifyCodeImageHttpHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>处理请求</summary>
            <param name="context"></param>
        </member>
        <member name="M:XControl.VerifyCodeImageHttpHandler.VerifyCode(System.String,System.String,System.Web.HttpContext)">
            <summary>效验指定输入是否和指定请求产生的验证码相同</summary>
            <param name="input">用户输入</param>
            <param name="verify">验证标识,一般是VerifyCodeBox.VerifyGUID</param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.VerifyCodeImageHttpHandler.ResetVerifyCode(System.String,System.Web.HttpContext)">
            <summary>复位指定验证标识,除非再次请求验证码,否则任何VerifyCode方法的调用都会返回false</summary>
            <param name="verify"></param>
            <param name="context"></param>
        </member>
        <member name="M:XControl.VerifyCodeImageHttpHandler.CreateVerifyCodeImage(System.String,System.IO.Stream)">
            <summary>
            创建指定验证码的图片,将结果输出到指定流中
            </summary>
            <param name="verifyCode"></param>
            <param name="stream"></param>
        </member>
        <member name="M:XControl.VerifyCodeImageHttpHandler.CreateErrorImage(System.String,System.IO.Stream)">
            <summary>创建错误图片,不要使用这个方法显示动态错误消息</summary>
            <param name="msg"></param>
            <param name="stream"></param>
        </member>
        <member name="P:XControl.VerifyCodeImageHttpHandler.SessionPrefix">
            <summary>
            效验码的正确值在Session中存储的前缀
            </summary>
        </member>
        <member name="P:XControl.VerifyCodeImageHttpHandler.IsReusable">
            <summary>可重用</summary>
        </member>
        <member name="T:XControl.GridViewExtender">
            <summary>GridView扩展控件</summary>
        </member>
        <member name="M:XControl.GridViewExtender.OnInit(System.EventArgs)">
            <summary>已重载。</summary>
            <param name="e"></param>
        </member>
        <member name="M:XControl.GridViewExtender.OnPreRender(System.EventArgs)">
            <summary>已重载。</summary>
            <param name="e"></param>
        </member>
        <member name="M:XControl.GridViewExtender.JSStringEscape(System.String)">
            <summary>将指定的字符串作为javascript中使用的字符串内容返回,没有js字符串声明两边的双引号</summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.GridViewExtender.SimpleMinJs(System.String)">
            <summary>将指定的javascript代码做简单压缩,去除换行和缩进</summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.GridViewExtender.HTMLPropertyEscape(System.String)">
            <summary>将指定字符串作为html标签属性中可使用的字符串返回</summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:XControl.GridViewExtender.SelectedRowBackColor">
            <summary>选中项背景颜色</summary>
        </member>
        <member name="P:XControl.GridViewExtender.RequestKeyName">
            <summary>请求字符串中作为键值的参数</summary>
        </member>
        <member name="P:XControl.GridViewExtender.OnRowClientClick">
            <summary>客户端单击行时执行脚本，{rowindex}代表索引，{datakey}代表键值，{cell0}代表单元格值</summary>
        </member>
        <member name="P:XControl.GridViewExtender.OnRowDoubleClientClick">
            <summary>客户端双击行时执行脚本，{rowindex}代表索引，{datakey}代表键值，{cell0}代表单元格值</summary>
        </member>
        <member name="P:XControl.GridViewExtender.CheckBoxIndex">
            <summary>选择框位置，需要自己创建CheckBox模版列，这里只是指定而已</summary>
        </member>
        <member name="P:XControl.GridViewExtender.DblClickRowFieldText">
            <summary>双击行时点击的列文本,一般在前端表现为A标签的内容</summary>
        </member>
        <member name="P:XControl.GridViewExtender.TotalCount">
            <summary>总记录数</summary>
        </member>
        <member name="P:XControl.GridViewExtender.RowCount">
            <summary>当前行数</summary>
        </member>
        <member name="P:XControl.GridViewExtender.DataSource">
            <summary>ObjectDataSource返回的数据源</summary>
        </member>
        <member name="P:XControl.GridViewExtender.SelectedIndexes">
            <summary>被选择行的索引</summary>
        </member>
        <member name="P:XControl.GridViewExtender.SelectedIndexesString">
            <summary>被选择行的索引</summary>
        </member>
        <member name="P:XControl.GridViewExtender.SelectedValues">
            <summary>被选择行的键值</summary>
        </member>
        <member name="P:XControl.GridViewExtender.SelectedIntValues">
            <summary>被选择行的整型键值，因为整型最常用</summary>
        </member>
        <member name="P:XControl.GridViewExtender.SelectedValuesString">
            <summary>被选择行的键值</summary>
        </member>
        <member name="P:XControl.GridViewExtender.PagerTemplateString">
            <summary>分页模版</summary>
        </member>
        <member name="T:XControl.DataPagerItem">
            <summary>分页模版项</summary>
        </member>
        <member name="P:XControl.DataPagerItem.DataItem">
            <summary>数据项</summary>
        </member>
        <member name="P:XControl.DataPagerItem.DataItemIndex">
            <summary>数据索引</summary>
        </member>
        <member name="P:XControl.DataPagerItem.DisplayIndex">
            <summary>显示索引</summary>
        </member>
        <member name="T:XControl.IPagedDataSource">
            <summary>分页数据源接口</summary>
        </member>
        <member name="P:XControl.IPagedDataSource.TotalRowCount">
            <summary>总记录数</summary>
        </member>
        <member name="P:XControl.IPagedDataSource.PageSize">
            <summary>每页大小</summary>
        </member>
        <member name="P:XControl.IPagedDataSource.PageIndex">
            <summary>当前页。0开始</summary>
        </member>
        <member name="P:XControl.IPagedDataSource.PageCount">
            <summary>页数</summary>
        </member>
        <member name="P:XControl.IPagedDataSource.IsFirstPage">
            <summary>是否第一页</summary>
        </member>
        <member name="P:XControl.IPagedDataSource.IsLastPage">
            <summary>是否最后一页</summary>
        </member>
        <member name="T:XControl.SR">
            <summary>System.Web的资源包装</summary>
        </member>
        <member name="M:XControl.SR.GetString(System.String,System.Object[])">
            <summary>取得System.Web资源中的字符串</summary>
            <param name="name">名称</param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.SR.GetString(System.String)">
            <summary>取得System.Web资源中的字符串</summary>
            <param name="name">名称</param>
            <returns></returns>
        </member>
        <member name="P:XControl.SR.SRType">
            <summary>类型</summary>
        </member>
        <member name="T:XControl.DateBox">
            <summary>日期选择控件</summary>
        </member>
        <member name="M:XControl.DateBox.#ctor">
            <summary>初始化选择框的样式。</summary>
        </member>
        <member name="M:XControl.DateBox.OnPreRender(System.EventArgs)">
            <summary>已重载。</summary>
            <param name="e"></param>
        </member>
        <member name="P:XControl.DateBox.Value">
            <summary>当前值</summary>
        </member>
        <member name="T:XControl.IntCheckBox">
            <summary>整型选择控件。</summary>
        </member>
        <member name="P:XControl.IntCheckBox.SelectedValue">
            <summary>选中值</summary>
        </member>
        <member name="P:XControl.IntCheckBox.UnSelectedValue">
            <summary>非选中值</summary>
        </member>
        <member name="P:XControl.IntCheckBox.OnlySelect">
            <summary>是否仅仅选中</summary>
        </member>
        <member name="P:XControl.IntCheckBox.Value">
            <summary>当前值</summary>
        </member>
        <member name="T:XControl.IPBox">
            <summary>IP地址输入控件。只能输入数字，并可以规定范围、间隔。</summary>
        </member>
        <member name="M:XControl.IPBox.#ctor">
            <summary>初始化IP地址输入控件的样式。</summary>
        </member>
        <member name="M:XControl.IPBox.OnPreRender(System.EventArgs)">
            <summary>已重载。</summary>
            <param name="e"></param>
        </member>
        <member name="T:XControl.MailBox">
            <summary>邮件地址输入控件。只能输入数字，并可以规定范围、间隔。</summary>
        </member>
        <member name="M:XControl.MailBox.#ctor">
            <summary>初始化邮件地址输入控件的样式。</summary>
        </member>
        <member name="M:XControl.MailBox.OnPreRender(System.EventArgs)">
            <summary>已重载。</summary>
            <param name="e"></param>
        </member>
        <member name="T:XControl.NumberBox">
            <summary>
            数字输入控件。只能输入数字，并可以规定范围、间隔。
            <remarks>最大最小值只对正整数有效</remarks>
            </summary>
        </member>
        <member name="M:XControl.NumberBox.#ctor">
            <summary>初始化数字输入控件的样式。</summary>
        </member>
        <member name="M:XControl.NumberBox.OnPreRender(System.EventArgs)">
            <summary>已重载。</summary>
            <param name="e"></param>
        </member>
        <member name="M:XControl.NumberBox.ShowError(System.String)">
            <summary>处理错误。</summary>
            <param name="err">错误信息</param>
        </member>
        <member name="M:XControl.NumberBox.RaisePostDataChangedEvent">
            <summary>已重载。校验输入数据是否在指定范围内</summary>
        </member>
        <member name="P:XControl.NumberBox.Min">
            <summary>最小值</summary>
        </member>
        <member name="P:XControl.NumberBox.Max">
            <summary>最大值</summary>
        </member>
        <member name="P:XControl.NumberBox.Value">
            <summary>当前值</summary>
        </member>
        <member name="P:XControl.NumberBox.AllowMinus">
            <summary>是否允许负数</summary>
        </member>
        <member name="T:XControl.RealBox">
            <summary>浮点数输入控件。只能输入数字，并可以规定范围、间隔。</summary>
        </member>
        <member name="M:XControl.RealBox.#ctor">
            <summary>初始化数字输入控件的样式。</summary>
        </member>
        <member name="M:XControl.RealBox.OnPreRender(System.EventArgs)">
            <summary>已重载。</summary>
            <param name="e"></param>
        </member>
        <member name="P:XControl.RealBox.Value">
            <summary>当前值</summary>
        </member>
        <member name="P:XControl.RealBox.AllowMinus">
            <summary>是否允许负数</summary>
        </member>
        <member name="T:XControl.DataPager">
            <summary>分页控件</summary>
        </member>
        <member name="M:XControl.DataPager.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)">
            <summary>引发 PageIndexChanging 事件</summary>
            <param name="e"></param>
        </member>
        <member name="M:XControl.DataPager.OnPageIndexChanged(System.EventArgs)">
            <summary>引发 PageIndexChanged 事件</summary>
            <param name="e"></param>
        </member>
        <member name="M:XControl.DataPager.OnCommand(System.Web.UI.WebControls.CommandEventArgs)">
            <summary>引发 Command 事件</summary>
            <param name="e"></param>
        </member>
        <member name="M:XControl.DataPager.CreateChildControls">
            <summary>建立子控件</summary>
        </member>
        <member name="M:XControl.DataPager.HandlePage(System.Int32)">
            <summary>处理分页事件</summary>
            <param name="newPage"></param>
        </member>
        <member name="M:XControl.DataPager.HandleEvent(System.EventArgs,System.Boolean,System.String)">
            <summary>仅处理分页事件</summary>
            <param name="e"></param>
            <param name="causesValidation"></param>
            <param name="validationGroup"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.DataPager.OnBubbleEvent(System.Object,System.EventArgs)">
            <summary>已重载。确定 Web 服务器控件的事件是否沿页的用户界面 (UI) 服务器控件层次结构向上传递。</summary>
            <param name="source"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.DataPager.RaisePostBackEvent(System.String)">
            <summary>当 DataPager 控件回发到服务器时引发此控件的合适的事件。</summary>
            <param name="eventArgument"></param>
        </member>
        <member name="M:XControl.DataPager.LoadViewState(System.Object)">
            <summary>加载ViewState</summary>
            <param name="savedState"></param>
        </member>
        <member name="M:XControl.DataPager.SaveViewState">
            <summary>保存ViewState</summary>
            <returns></returns>
        </member>
        <member name="M:XControl.DataPager.TrackViewState">
            <summary>检查ViewState</summary>
        </member>
        <member name="M:XControl.DataPager.OnPreRender(System.EventArgs)">
            <summary>已重写。保证建立子控件</summary>
            <param name="e"></param>
        </member>
        <member name="M:XControl.DataPager.Render(System.Web.UI.HtmlTextWriter)">
            <summary>已重写。保证建立子控件</summary>
            <param name="writer"></param>
        </member>
        <member name="M:XControl.DataPager.OnLoad(System.EventArgs)">
            <summary>加载时触发</summary>
            <param name="e"></param>
        </member>
        <member name="M:XControl.DataPager.OnInit(System.EventArgs)">
            <summary>初始化时触发</summary>
            <param name="e"></param>
        </member>
        <member name="M:XControl.DataPager.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>已重写。不输出开始标签</summary>
            <param name="writer"></param>
        </member>
        <member name="M:XControl.DataPager.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>已重写。不输出结束标签</summary>
            <param name="writer"></param>
        </member>
        <member name="P:XControl.DataPager.PageCount">
            <summary>页数</summary>
        </member>
        <member name="P:XControl.DataPager.TotalRowCount">
            <summary>页数</summary>
        </member>
        <member name="P:XControl.DataPager.TotalRowCountCache">
            <summary>缓存页数</summary>
        </member>
        <member name="P:XControl.DataPager.PageIndex">
            <summary>当前页</summary>
        </member>
        <member name="P:XControl.DataPager.PageIndex2">
            <summary>当前页，等于PageIndex+1</summary>
        </member>
        <member name="P:XControl.DataPager.PageSize">
            <summary>页大小</summary>
        </member>
        <member name="P:XControl.DataPager.PagerSettings">
            <summary>分页设置</summary>
        </member>
        <member name="P:XControl.DataPager.PagerStyle">
            <summary>分页样式</summary>
        </member>
        <member name="P:XControl.DataPager.PagerTemplate">
            <summary>分页模版</summary>
        </member>
        <member name="P:XControl.DataPager.DataSourceID">
            <summary>数据源</summary>
        </member>
        <member name="E:XControl.DataPager.PageIndexChanged">
            <summary>处理分页操作之后发生</summary>
        </member>
        <member name="E:XControl.DataPager.PageIndexChanging">
            <summary>处理分页操作之前发生</summary>
        </member>
        <member name="E:XControl.DataPager.PageCommand">
            <summary>当单击控件中的按钮时发生</summary>
        </member>
        <member name="P:XControl.DataPager.IsFirstPage">
            <summary>是否第一页</summary>
        </member>
        <member name="P:XControl.DataPager.IsLastPage">
            <summary>是否最后一页</summary>
        </member>
        <member name="P:XControl.DataPager.StartRowIndex">
            <summary>当前页开始行</summary>
        </member>
        <member name="P:XControl.DataPagerActionList.Designer">
            <summary>控件</summary>
        </member>
        <member name="P:XControl.DataPagerActionList.AutoShow">
            <summary>自动显示</summary>
        </member>
        <member name="T:XControl.DataPagerDesigner">
            <summary>分页控件设计器</summary>
        </member>
        <member name="M:XControl.DataPagerDesigner.GetDesignTimeHtml">
            <summary>取得设计时Html</summary>
            <returns></returns>
        </member>
        <member name="M:XControl.DataPagerDesigner.GetEmptyDesignTimeHtml">
            <summary>取得空Html</summary>
            <returns></returns>
        </member>
        <member name="M:XControl.DataPagerDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>取得异常发生时的Html</summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:XControl.DataPagerDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>初始化</summary>
            <param name="component"></param>
        </member>
        <member name="P:XControl.DataPagerDesigner.control">
            <summary>文档编辑器中的控件，可以更改持久化属性</summary>
        </member>
        <member name="P:XControl.DataPagerDesigner.TemplateGroups">
            <summary>模版组</summary>
        </member>
        <member name="P:XControl.DataPagerDesigner.UsePreviewControl">
            <summary>是否预览控件</summary>
        </member>
        <member name="P:XControl.DataPagerDesigner.ActionLists">
            <summary>动作列表集合</summary>
        </member>
        <member name="T:XControl.CheckBoxList">
            <summary>已重载。修改了绑定时参数改变导致二次绑定的问题</summary>
        </member>
        <member name="M:XControl.CheckBoxList.PerformSelect">
            <summary>已重载。避免绑定时重入该方法</summary>
        </member>
        <member name="P:XControl.CheckBoxList.SelectedValue">
            <summary>已重载。加上未添加到列表的项。</summary>
        </member>
        <member name="T:XControl.DateTimePicker">
            <summary>日期时间选择器</summary>
        </member>
        <member name="M:XControl.DateTimePicker.OnInit(System.EventArgs)">
            <summary></summary>
            <param name="e"></param>
        </member>
        <member name="M:XControl.DateTimePicker.OnLoad(System.EventArgs)">
            <summary></summary>
            <param name="e"></param>
        </member>
        <member name="M:XControl.DateTimePicker.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            呈现前修改初始化一次Text
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:XControl.DateTimePicker.LongTime">
            <summary>是否长时间格式</summary>
        </member>
        <member name="P:XControl.DateTimePicker.MinTime">
            <summary>是否只显示时间部分格式</summary>
        </member>
        <member name="P:XControl.DateTimePicker.ClientReadOnly">
            <summary>客户端只读</summary>
        </member>
        <member name="P:XControl.DateTimePicker.Skin">
            <summary></summary>
        </member>
        <member name="P:XControl.DateTimePicker.Lang">
            <summary>语言</summary>
        </member>
        <member name="P:XControl.DateTimePicker.Value">
            <summary></summary>
        </member>
        <member name="P:XControl.DateTimePicker.ValueNullSetCurrent">
            <summary></summary>
        </member>
        <member name="T:XControl.Skins">
            <summary>皮肤</summary>
        </member>
        <member name="F:XControl.Skins.默认">
            <summary>默认</summary>
        </member>
        <member name="F:XControl.Skins.绿色">
            <summary>绿色</summary>
        </member>
        <member name="T:XControl.Langs">
            <summary>语言</summary>
        </member>
        <member name="F:XControl.Langs.自动">
            <summary>自动</summary>
        </member>
        <member name="F:XControl.Langs.英文">
            <summary>英文</summary>
        </member>
        <member name="F:XControl.Langs.简体中文">
            <summary>简体中文</summary>
        </member>
        <member name="F:XControl.Langs.繁体中文">
            <summary>繁体中文</summary>
        </member>
        <member name="T:XControl.DropDownList">
             <summary>下拉列表。绑定时，如果没有对应的选择项，则自动加上。</summary>
             <remarks>
             注意:在实践中发现DropDownList.SelectedIndex有可能修改this.Items[0].Selected 为true
            
             进而会导致错误的结果,所以尽量不在这个控件内部使用SelectedIndex SelectedValue属性
             </remarks>
        </member>
        <member name="M:XControl.DropDownList.PerformDataBinding(System.Collections.IEnumerable)">
            <summary>绑定数据</summary>
            <param name="dataSource"></param>
        </member>
        <member name="M:XControl.DropDownList.PerformSelect">
            <summary>已重载。避免绑定时重入该方法</summary>
        </member>
        <member name="P:XControl.DropDownList.RealSelectedValue">
            <summary>
            当前实际选中项的值,没有值将返回null,而不是SelectedValue会修改为第一项默认值
            </summary>
        </member>
        <member name="P:XControl.DropDownList.NoExceptionItem">
            <summary>
            是否不添加异常项
            </summary>
        </member>
        <member name="P:XControl.DropDownList.SelectedValue">
            <summary>已重载。加上未添加到列表的项。</summary>
        </member>
        <member name="T:XControl.TargetControlTypeAttribute">
            <summary>目标控件类型</summary>
        </member>
        <member name="M:XControl.TargetControlTypeAttribute.#ctor(System.Type)">
            <summary>指定目标控件类型</summary>
            <param name="type">类型</param>
        </member>
        <member name="P:XControl.TargetControlTypeAttribute.Type">
            <summary>目标控件类型</summary>
        </member>
        <member name="T:XControl.ObjectDataSourceExtender">
            <summary>ObjectDataSource控件扩展</summary>
        </member>
    </members>
</doc>
